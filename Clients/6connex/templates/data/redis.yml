---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  It creates an elasticache cluster and a security group for the cluster.
Parameters:
  Identifier:
    Type: String
    Description: A name identifier for the redis replication cluster
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC to host the elasticache cluster
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet Ids to host the elasticache cluster
  ElastichCacheSecurityGroup:
    Type: String
    Description: ElastiCache SecurityGroup for the cluster
  ElasticachePort:
    Type: Number
    Default: 6379
    Description: Define the port to be used for Elasticache cluster
  Encryption:
    Type: String
    Default: false
    Description: enable Encryption
  EncryptionInTransit:
    Type: String
    Default: false
    Description: enables encryption in transit
  KmsKeyId:
    Type: String
    Default: ''
    Description: kms key to encrypt redis cluster
  CacheNodeType:
    Type: String
    Default: cache.t2.small
    Description: The compute and memory capacity of the nodes in the node group (shard).
  CacheParameterGroupFamily:
    Type: String
    Default: redis5.0
    Description: he name of the cache parameter group family that this cache parameter group is compatible with.
    AllowedValues: [ redis2.6, redis2.8, redis3.2, redis4.0, redis5.0,  memcached1.5, memcached1.4]
  ElasticacheEngine:
    Type: String
    Default: redis
    Description: The name of the cache engine to be used for this cluster.
  EngineVersion:
    Type: String
    Default: '5.0.6'
    Description: The number of the version for the cache engine to be used for this cluster.
  NumCacheClusters:
    Type: Number
    Default: 2
    Description: The number of cache clusters to replicate 2 up to 6
  MultiAzEnabled:
    Type: String
    Default: true
    Description: Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region.
  PreferredAvailabilityZones:
    Type: List<String>
    Default: 'us-east-1c,us-east-1f'
    Description: A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.
  PreferredMaintenanceWindow:
    Type: String
    Default: wed:10:00-wed:11:00
    Description: Specifies the weekly time range during which maintenance on the cluster is performed.
  # ############### Stack ##############
  OwnerName:
    Type: String
    Default: nclouds
    Description: An arbitrary tag name for the owner of these resources
  ProjectName:
    Type: String
    Description: The name of the stack to which these resources belong
  Environment:
    Type: String
    Default: dev
    Description: Environment name to append to resources names and tags

Conditions:

  NoKmsKey: !Equals [!Ref KmsKeyId, '']

Resources:

  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub ${Identifier}-${Environment}-redis-subnetgroup
      Description: Subnet group for the elasticache cluster
      SubnetIds: !Ref SubnetIds
  ParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: !Ref CacheParameterGroupFamily
      Description: Parameter group for the redis cluster

  RedisReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: !Sub ${Identifier}-${Environment}-redis
      AtRestEncryptionEnabled: !Ref Encryption
      AutomaticFailoverEnabled: true
      CacheNodeType: !Ref CacheNodeType
      CacheParameterGroupName: !Ref ParameterGroup
      CacheSubnetGroupName: !Ref SubnetGroup
      Engine: !Ref ElasticacheEngine
      EngineVersion: !Ref EngineVersion
      MultiAZEnabled: !Ref MultiAzEnabled
      NumCacheClusters: !Ref NumCacheClusters
      Port: !Ref ElasticachePort
      PreferredCacheClusterAZs: !Ref PreferredAvailabilityZones
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      TransitEncryptionEnabled: !Ref EncryptionInTransit
      KmsKeyId: !If [ NoKmsKey, !Ref 'AWS::NoValue', !Ref KmsKeyId ]
      SecurityGroupIds:
        - !Ref ElastichCacheSecurityGroup
      ReplicationGroupDescription: replication for redis cluster
      Tags:
        - Key: Name
          Value: !Sub ${Identifier}-${Environment}-elasticache-cluster
        - Key: Owner
          Value: !Ref OwnerName
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  RedisEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Sub /${Environment}/${Identifier}/Redis/RedisEndpoint
      Type: String
      Value: !GetAtt RedisReplicationGroup.PrimaryEndPoint.Address
      Description: !Sub Redis endpoint on Environment ${Environment}
      Tags:
        Name: !Sub /${Environment}/${Identifier}/Redis/RedisEndpoint
        OwnerName: !Ref OwnerName
        ProjectName: !Ref ProjectName
        Environment: !Ref  Environment

  RedisPortParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Sub /${Environment}/${Identifier}/Redis/RedisPort
      Type: String
      Value: !Ref ElasticachePort
      Description: !Sub Redis port on Environment ${Environment}
      Tags:
        Name: !Sub /${Environment}/${Identifier}/Redis/RedisPort
        OwnerName: !Ref OwnerName
        ProjectName: !Ref ProjectName
        Environment: !Ref  Environment

Outputs:

  RedisEndpoint:
    Description: redis endpoint Address
    Value: !GetAtt RedisReplicationGroup.PrimaryEndPoint.Address

  RedisEndpointName:
    Description: redis endpoint name
    Value: !Sub /${Environment}/${Identifier}/Redis/RedisEndpoint

  RedisPortName:
    Description: redis port name
    Value: !Sub /${Environment}/${Identifier}/Redis/RedisPort
