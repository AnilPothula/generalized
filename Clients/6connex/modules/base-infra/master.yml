---
AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Template - Network module, creates the vpc and subnets for the infrastrcture

Parameters:
  ##################### ENVIRONMENT PARAMETERS #####################################
  Identifier:
    Type: String
    Description: Identifier to tag resources created by the stack
  S3BucketName:
    Type: String
    Description: bucket where CloudFormation templates are stored
  Environment:
    Type: String
    Default: dev
    Description: Environment name to append to resources names and tags
  DefaultBuildNumber:
    Type: String
    Description: default build number used to deploy application on these Environment
  ##################### MANAGEMENT ################
  VpcCidr:
    Type: String
    Description: IPV4 CIDR block for the VPC
    AllowedPattern: "(\\d{1,3}\\.){3}\\d{1,3}/(\\d{1,2})"
    ConstraintDescription: You must enter a valid CIDR string
  PublicSubnetsCidr:
    Type: String
    Description: IPV4 CIDR blocks for the public subnets
  DataSubnetsCidr:
    Type: String
    Description: IPV4 CIDR blocks for the data subnets
  ApplicationSubnetsCidr:
    Type: String
    Description: IPV4 CIDR blocks for the application subnets
  ##################### NETWORK PARAMETERS #########################################
  ##################### OPSWORKS PARAMETERS ########################################
  RepositoryUrl:
    Type: String
    Description: Defines the repository url where cookbooks are stored
  DefaultSshKeyName:
    Type: String
    Description: KeyName to use for instances
  OpsworksConfig:
    Type: String
    Default: default
    Description: defines an opsworks configuration to use for the opsworks stack, optional
    AllowedValues:
    - default
  ##################### OPSWORKS PARAMETERS ########################################
  AlbCertificateArn:
    Type: String
    Description: application load balancer certificate
  #################################################################################
  RtsImageId:
    Type: AWS::EC2::Image::Id
    Description: RTS AMI to use for the autoscaling launch template
  RtsInstanceType:
    Type: String
    Description: RTS Instance Type to be used for autoscaling, enter a valid Instance Type
  RtsDesiredCapacity:
    Type: Number
    Default: 2
    Description: Desired capacity of instances to have for the RTS autoscaling group
  RtsMaxSize:
    Type: Number
    Default: 4
    Description: Maximum number of instances to have on the rts autoscaling group
  RtsMinSize:
    Type: Number
    Default: 1
    Description: Minimum number of instances to have on the rts autoscaling group
  RtsNumberRequestsPerNode:
    Type: Number
    Default: 0
    Description: Target value for the number of requests completed per target in an Application Load Balancer target group
  RtsCpuAverageTargetValue:
    Type: Number
    Default: 0
    Description: Target value for the Average CPU utilization of the Auto Scaling group (Optional)
  #################################################################################
  TomcatImageId:
    Type: AWS::EC2::Image::Id
    Description: Tomcat AMI to use for the autoscaling launch template
  TomcatInstanceType:
    Type: String
    Description: Tomcat Instance Type to be used for autoscaling, enter a valid Instance Type
  TomcatDesiredCapacity:
    Type: Number
    Default: 2
    Description: Desired capacity of instances to have for the tomcat autoscaling group
  TomcatMaxSize:
    Type: Number
    Default: 4
    Description: Maximum number of instances to have on the tomcat autoscaling group
  TomcatMinSize:
    Type: Number
    Default: 1
    Description: Minimum number of instances to have on the tomcat autoscaling group
  TomcatNumberRequestsPerNode:
    Type: Number
    Default: 0
    Description: Target value for the number of requests completed per target in an Application Load Balancer target group
  TomcatCpuAverageTargetValue:
    Type: Number
    Default: 0
    Description: Target value for the Average CPU utilization of the Auto Scaling group (Optional)
  #################################################################################
  TomcatVideoImageId:
    Type: AWS::EC2::Image::Id
    Description: Tomcat AMI to use for the autoscaling launch template
  TomcatVideoInstanceType:
    Type: String
    Description: Tomcat Instance Type to be used for autoscaling, enter a valid Instance Type
  TomcatVideoDesiredCapacity:
    Type: Number
    Default: 2
    Description: Desired capacity of instances to have for the tomcat autoscaling group
  TomcatVideoMaxSize:
    Type: Number
    Default: 4
    Description: Maximum number of instances to have on the tomcat autoscaling group
  TomcatVideoMinSize:
    Type: Number
    Default: 1
    Description: Minimum number of instances to have on the tomcat autoscaling group
  TomcatVideoLowCpuTreshold:
    Type: Number
    Default: 50
    Description: cpu porcentage to scale down tomcat instances when CPU usage is low
  TomcatVideoHighCpuTreshold:
    Type: Number
    Default: 80
    Description: cpu porcentage to scale up tomcat instances when CPU usage is high
  #################################################################################
  Route53HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: hosted zone Id
  #################################################################################
  MemcacheNodes:
    Type: Number
    Description: number of nodes to use for the memcache cluster (same numbre as AZs)
  MemcacheType:
    Type: String
    Description: nodes types for memcache nodes
  MemcacheMultiAz:
    Type: String
    Default: single-az
    Description: multi az cluster
    AllowedValues:
    - cross-az
    - single-az
  #################################################################################
  RedisNodes:
    Type: Number
    Default: 2
    Description: number of nodes for the redis cluster (Minimum 2 Nodes)
  RedisType:
    Type: String
    Description: redis nodes types
  RedisMultiAz:
    Type: String
    Default: false
    Description: configures a multi az redis cluster
    AllowedValues:
    - true
    - false
  #################################################################################
  UserDb:
    Type: String
    Description: Username for db6c database instance
  PasswordDb:
    Type: String
    NoEcho: true
    Description: Password for db6c database instance
  ClassDb:
    Type: String
    Description: Class for db6c database instance
  AllocatedStorageDb:
    Type: String
    Description: allocated Storage for db6c database instance
  #################################################################################
  UserDw:
    Type: String
    Description: Username for dw6c database instance
  PasswordDw:
    Type: String
    NoEcho: true
    Description: Password for dw6c database instance
  ClassDw:
    Type: String
    Description: Class for dw6c database instance
  AllocatedStorageDw:
    Type: String
    Description: allocated Storage for dw6c database instance
  #################################################################################
  RdsMultiAz:
    Type: String
    Default: false
    Description: creates a multi az dbs
    AllowedValues:
    - true
    - false
  KmsKeyId:
    Type: String
    Default: ''
    Description: Kms Key for Encryption
  S3BuildsBucketName:
    Type: String
    Description: builds bucket name
  RabbitMqPassword:
    Type: String
    NoEcho: true
    Description: rabbit mq password
  RabbitMqUsername:
    Type: String
    Description: rabbit mq username
  MetricsImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI to use for metrics node
  MetricsNodeType:
    Type: String
    Description: Metrics node type
  OpsworksSshSecretId:
    Type: String
    NoEcho: true
    Description: Secrets manager id where ssh key for git is stored
  GitBranch:
    Type: String
    Description: git branch where the chef cookbooks are stored
  #################################################################################
  RtsDomain:
    Type: String
    Description: rts domain, ex rts.6connex.com
  MetricDomain:
    Type: String
    Description: metrics domain, ex metrics.6connex.com
  TomcatDomain:
    Type: String
    Description: tomcat domain, ex tomcat.6connex.com

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Environment Configurations"
      Parameters:
      - Identifier
      - S3BucketName
      - DefaultBuildNumber
      - Environment
      - S3BuildsBucketName
    - Label:
        default: "Network Configuration for the Environment"
      Parameters:
      - VpcCidr
      - PublicSubnetsCidr
      - ApplicationSubnetsCidr
      - DataSubnetsCidr
    - Label:
        default: "Opsworks Stack Configuration"
      Parameters:
      - RepositoryUrl
      - DefaultSshKeyName
      - OpsworksConfig
      - OpsworksSshSecretId
      - GitBranch
    - Label:
        default: "Application Load Balancer Configuration"
      Parameters:
      - AlbCertificateArn
      - Route53HostedZoneId
      - RtsDomain
      - MetricDomain
      - TomcatDomain
    - Label:
        default: "RTS Autoscaling Configurations"
      Parameters:
      - RtsImageId
      - RtsInstanceType
      - RtsDesiredCapacity
      - RtsMaxSize
      - RtsMinSize
      - RtsCpuAverageTargetValue
      - RtsNumberRequestsPerNode
    - Label:
        default: "Tomcat Autoscaling Configurations"
      Parameters:
      - TomcatImageId
      - TomcatInstanceType
      - TomcatDesiredCapacity
      - TomcatMaxSize
      - TomcatMinSize
      - TomcatCpuAverageTargetValue
      - TomcatNumberRequestsPerNode
    - Label:
        default: "Tomcat Video Autoscaling Configurations"
      Parameters:
      - TomcatVideoImageId
      - TomcatVideoInstanceType
      - TomcatVideoDesiredCapacity
      - TomcatVideoMaxSize
      - TomcatVideoMinSize
      - TomcatVideoLowCpuTreshold
      - TomcatVideoHighCpuTreshold
    - Label:
        default: "Memcache Cluster Configuration"
      Parameters:
      - MemcacheNodes
      - MemcacheType
      - MemcacheMultiAz
    - Label:
        default: "Redis Cluster Configuration"
      Parameters:
      - RedisNodes
      - RedisType
      - RedisMultiAz
    - Label:
        default: "RDS DB configuration"
      Parameters:
      - UserDb
      - PasswordDb
      - ClassDb
      - AllocatedStorageDb
    - Label:
        default: "RDS DW Configuration"
      Parameters:
      - UserDw
      - PasswordDw
      - ClassDw
      - AllocatedStorageDw
    - Label:
        default: "General RDS Configuration"
      Parameters:
      - RdsMultiAz
    - Label:
        default: "Encryption Configuration"
      Parameters:
      - KmsKeyId
    - Label:
        default: "Rabbit MQ Configuration"
      Parameters:
      - RabbitMqPassword
      - RabbitMqUsername
      - MetricsImageId
      - MetricsNodeType
    ParameterLabels:
      Identifier:
        default: 'Name to append to the resources'
      S3BucketName:
        default: 'S3 Bucket Name'
      DefaultBuildNumber:
        default: 'Build Number to Deploy on Instances (6connex-builds)'
      Environment:
        default: 'Environment of the infrastructure deployment (default: dev)'
      VpcCidr:
        default: Valid VPC CDIR (must not overlap Management VPC CIDR)
      PublicSubnetsCidr:
        default: Valid CDIR Block, comma separated values for public subnets
      ApplicationSubnetsCidr:
        default: Valid CIDR Block, comma separated values for application subnets
      DataSubnetsCidr:
        default: Valid CIDR Block, comma separated values for data subnets
      RepositoryUrl:
        default: Git repository of the Chef Recipes
      DefaultSshKeyName:
        default: Key Pair name for OpsworksStack
      OpsworksConfig:
        default: Select a configuration to use for the opsworks stack
      AlbCertificateArn:
        default: ARN of the certificate to be used on the Application load balancer
      RtsImageId:
        default: RTS AMI to use
      RtsInstanceType:
        default: RTS Instance type for autoscaling (Provide Valid Type)
      RtsDesiredCapacity:
        default: Number of RTS instances to provision
      RtsMaxSize:
        default: Maximum number of RTS instances for the autoscaling group
      RtsMinSize:
        default: Minimum number of RTS instances for the autoscaling group
      RtsCpuAverageTargetValue:
        default: (Optional) CPU target value for RTS Auto Scaling
      TomcatImageId:
        default: Tomcat AMI to use
      TomcatInstanceType:
        default: Tomcat Instance type for autoscaling (Provide Valid Type)
      TomcatDesiredCapacity:
        default: Number of Tomcat instances to provision
      TomcatMaxSize:
        default: Maximum number of Tomcat instances for the autoscaling group
      TomcatMinSize:
        default: Minimum number of Tomcat instances for the autoscaling group
      TomcatCpuAverageTargetValue:
        default: (Optional) CPU target value for Tomcat Auto scaling group
      TomcatVideoImageId:
        default: Tomcat Video AMI to use
      TomcatVideoInstanceType:
        default: Tomcat Instance type for autoscaling (Provide Valid Type)
      TomcatVideoDesiredCapacity:
        default: Number of Tomcat instances to provision
      TomcatVideoMaxSize:
        default: Maximum number of Tomcat instances for the autoscaling group
      TomcatVideoMinSize:
        default: Minimum number of Tomcat instances for the autoscaling group
      TomcatVideoLowCpuTreshold:
        default: CPU porcentage value to scale down instances on tomcat autoscaling
      TomcatVideoHighCpuTreshold:
        default: CPU porcentage value to scale up instances or tomcat autoscaling
      MemcacheNodes:
        default: Number of Nodes for Memcache Clusters (same number as AZs)
      MemcacheType:
        default: Type for memcache nodes
      MemcacheMultiAz:
        default: MultiAz cluster configuration (if cross-az, number of nodes must be same number as AZs on Region)
      RedisNodes:
        default: Number of Nodes for Redis Cluster (same number as AZs)
      RedisType:
        default: Type of redis nodes
      RedisMultiAz:
        default: MultiAz cluster configuration (if true, number of nodes must be same number as AZs on Region)
      UserDb:
        default: Username for DB RDS instance
      PasswordDb:
        default: Password for DB RDS instance
      ClassDb:
        default: Class for DB RDS
      AllocatedStorageDb:
        default: Allocated Storage for DB RDS Instance
      UserDw:
        default: Username for DW RDS instance
      PasswordDw:
        default: Password for DW RDS instance
      ClassDw:
        default: Class for DW RDS
      AllocatedStorageDw:
        default: Allocated Storage for DW RDS Instance
      RdsMultiAz:
        default: "RDS MultiAz creation"
      KmsKeyId:
        default: KMS key for encryption (Optional)
      S3BuildsBucketName:
        default: Name of th S3 bucket containing the Builds Bucket
      RabbitMqPassword:
        default: Rabbit MQ password configuration
      RabbitMqUsername:
        default: Rabbit MQ username configuration
      MetricsImageId:
        default: Metrics node image id
      MetricsNodeType:
        default: Metrics Instance Type
      OpsworksSshSecretId:
        default: Chef cookbooks repo SSH Secret Id
      GitBranch:
        default: Chef cookbooks branch/revision
      RtsDomain:
        default: RTS Host Domain
      TomcatDomain:
        default: Tomcat Host Domain
      MetricDomain:
        default: Metrics Host Domain

Mappings:

  NetworkTemplate:
    us-east-1:
      template: vpc.yml
      identifier: us2

  VpcPeeringConfiguration: # configuration on US WEST 1
    management:
      MgmCidr: '10.10.0.0/16'
      MgmVpcId: 'vpc-0c27cafc4adb0072c'
      MgmtRegion: 'us-west-1'

  OpsworksConfiguration:
    default:
      Identifier: 'us2'
      AgentVersion: 'LATEST'
      BerkshelfVersion: '3.2.0'
      ManageBerkshelf: 'true'
      ConfigurationManagerName: 'Chef'
      ConfigurationManagerVersion: '11.10'
      RepositoryType: 'git'
      DefaultOs: 'Custom'
      DefaultRootDeviceType: 'ebs'
      HostnameTheme: 'Layer_Dependent'
      UseCustomCookbooks: 'true'

  S3BucketsNames:
    us-east-1:
      SharedFilesName: sharedfiles-download
      BatchReportsName: batch-export-reports
      BriefCaseName: briefcase-downloads

  AutoScalingConfig:
    RtsConfig:
      DownCooldown: '300'
      UpCooldown: '300'
      LowPerid: '300'
      HighPeriod: '300'
    TomcatConfig:
      DownCooldown: '300'
      UpCooldown: '300'
      LowPerid: '300'
      HighPeriod: '300'
    TomcatVideo:
      DownCooldown: '300'
      UpCooldown: '300'
      LowPerid: '300'
      HighPeriod: '300'
      ScaleUpAdjustment: '1'
      ScaleDownAdjustment: '-1'

  MetricsNodeConfiguration:
    MetricsDefaults:
      Port: '5672'

  DataStoreConfiguration:
    EfsConfig:
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
      Encrypted: 'true'
    MemcacheConfig:
      CacheParameterGroupFamily: memcached1.4
      ElasticacheEngine: memcached
      MultiAz: cross-az
      EngineVersion: '1.4.14'
      MemcachePort: '11211'
    RedisConfig:
      Encryption: 'true'
      EncryptionInTransit:  'true'
      CacheParameterGroupFamily: 'redis5.0'
      ElasticacheEngine: 'redis'
      EngineVersion: '5.0.6'
      MultiAzEnabled: 'true'
      RedisPort: '6379'
    RdsConfig:
      Encryption: 'true'

Conditions:

  IsProduction: !Equals [!Ref Environment, 'prod']
  NoKmsKey: !Equals [!Ref KmsKeyId, '']

Resources:

  Network:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - "https://${Bucket}.s3.${Region}.amazonaws.com/${Env}/templates/network/${Template}"
          - Bucket: !Ref S3BucketName
            Region: !Ref 'AWS::Region'
            Env: !Ref Environment
            Template: !FindInMap [NetworkTemplate, !Ref 'AWS::Region', template]
      Parameters:
        Identifier: !Ref Identifier
        VpcCidr: !Ref VpcCidr
        PublicSubnetsCidr: !Join [ ',', !Split [',', !Ref PublicSubnetsCidr] ]
        DataSubnetsCidr: !Join [ ',', !Split [',', !Ref DataSubnetsCidr] ]
        ApplicationSubnetsCidr: !Join [ ',', !Split [',', !Ref ApplicationSubnetsCidr]]
        SetNatGateway: true
        NatGatewayHA: !If [IsProduction, true, false]
        RequesterVpcId: !FindInMap [ VpcPeeringConfiguration, management, MgmVpcId ]
        RequesterVpcCidrBlock: !FindInMap [VpcPeeringConfiguration, management, MgmCidr]
        MgmtRegion: !FindInMap [VpcPeeringConfiguration, management, MgmtRegion]
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/network/security_groups.yml"
      Parameters:
        Identifier: !Sub ${Identifier}-sgs
        VpcId: !GetAtt Network.Outputs.VpcId
        VpcCidr: !Ref VpcCidr
        MgmCidr: !FindInMap [VpcPeeringConfiguration, management, MgmCidr]
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  EfsStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SecurityGroups
      - Network
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/data/efs.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        Encrypted: !FindInMap [DataStoreConfiguration, EfsConfig, Encrypted]
        ## KMS
        KmsKeyId: !If [ NoKmsKey, !Ref 'AWS::NoValue', !Ref KmsKeyId ]
        PerformanceMode: !FindInMap [DataStoreConfiguration, EfsConfig, PerformanceMode]
        ThroughputMode: !FindInMap [DataStoreConfiguration, EfsConfig, ThroughputMode]
        ProvisionedThroughputInMibps: !Ref 'AWS::NoValue'
        SubnetIds: !Join [',', !Split [',', !GetAtt Network.Outputs.DataSubnetIds] ]
        EfsSecurityGroup: !GetAtt SecurityGroups.Outputs.EfsSg
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  MemCacheClusterStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SecurityGroups
      - Network
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/data/elasticache.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        VpcId: !GetAtt Network.Outputs.VpcId
        SubnetIds: !Join [',', !Split [',', !GetAtt Network.Outputs.DataSubnetIds] ]
        ElastichCacheSecurityGroup: !GetAtt SecurityGroups.Outputs.MemcaheSg
        ElasticachePort: !FindInMap [DataStoreConfiguration, MemcacheConfig, MemcachePort]
        CacheNodeType: !Ref MemcacheType
        CacheParameterGroupFamily: !FindInMap [DataStoreConfiguration, MemcacheConfig, CacheParameterGroupFamily]
        ElasticacheEngine: !FindInMap [DataStoreConfiguration, MemcacheConfig, ElasticacheEngine]
        EngineVersion: !FindInMap [DataStoreConfiguration, MemcacheConfig, EngineVersion]
        NumCacheNodes: !Ref MemcacheNodes
        MultiAz: !Ref MemcacheMultiAz
        PreferredAvailabilityZones:
          !If
          - IsProduction
          - !Join
            - ','
            - Fn::GetAZs: !Ref 'AWS::Region'
          - !Select
            - 0
            - Fn::GetAZs: !Ref 'AWS::Region'
        PreferredMaintenanceWindow: !Ref 'AWS::NoValue'
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  RedisReplicationCluster:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SecurityGroups
      - Network
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/data/redis.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        VpcId: !GetAtt Network.Outputs.VpcId
        SubnetIds: !Join [',', !Split [',', !GetAtt Network.Outputs.DataSubnetIds] ]
        ElastichCacheSecurityGroup: !GetAtt SecurityGroups.Outputs.RedisSg
        ElasticachePort: !FindInMap [DataStoreConfiguration, RedisConfig, RedisPort]
        Encryption: !FindInMap [DataStoreConfiguration, RedisConfig, Encryption]
        EncryptionInTransit: !FindInMap [DataStoreConfiguration, RedisConfig, EncryptionInTransit]
        #KMS
        KmsKeyId: !If [ NoKmsKey, !Ref 'AWS::NoValue', !Ref KmsKeyId ]
        CacheNodeType: !Ref RedisType
        CacheParameterGroupFamily: !FindInMap [DataStoreConfiguration, RedisConfig, CacheParameterGroupFamily]
        ElasticacheEngine: !FindInMap [DataStoreConfiguration, RedisConfig, ElasticacheEngine]
        EngineVersion: !FindInMap [DataStoreConfiguration, RedisConfig, EngineVersion]
        NumCacheClusters: !Ref RedisNodes
        MultiAzEnabled: !Ref RedisMultiAz
        PreferredAvailabilityZones:
          !If
          - IsProduction
          - !Join
            - ','
            - Fn::GetAZs: !Ref 'AWS::Region'
          - !Join
            - ','
            - - !Select
                - 0
                - Fn::GetAZs: !Ref 'AWS::Region'
              - !Select
                - 1
                - Fn::GetAZs: !Ref 'AWS::Region'
        PreferredMaintenanceWindow: !Ref 'AWS::NoValue'
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  RdsStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SecurityGroups
      - Network
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/data/rds.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        VpcId: !GetAtt Network.Outputs.VpcId
        SubnetIds: !Join [',', !Split [',', !GetAtt Network.Outputs.DataSubnetIds] ]
        RdsSecurityGroup: !GetAtt SecurityGroups.Outputs.RdsSg
        UserDb: !Ref UserDb
        PasswordDb: !Ref PasswordDb
        ClassDb: !Ref ClassDb
        EncryptDb: !FindInMap [DataStoreConfiguration, RdsConfig, Encryption]
        AllocatedStorageDb: !Ref AllocatedStorageDb
        UserDw: !Ref UserDw
        PasswordDw: !Ref PasswordDw
        ClassDw: !Ref ClassDw
        EncryptDw: !FindInMap [DataStoreConfiguration, RdsConfig, Encryption]
        AllocatedStorageDw: !Ref AllocatedStorageDw
        MultiAz: !Ref RdsMultiAz
        #KMS
        KmsKeyId: !If [ NoKmsKey, !Ref 'AWS::NoValue', !Ref KmsKeyId ]
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  S3Shared:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/others/s3.yml"
      Parameters:
        Identifier:
          !Sub
            - "${BaseName}-${Id}"
            - BaseName: !FindInMap [S3BucketsNames, !Ref 'AWS::Region', SharedFilesName]
              Id: !Ref Identifier
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
        OwnerName: 6connex

  S3BriefCase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/others/s3.yml"
      Parameters:
        Identifier:
          !Sub
            - "${BaseName}-${Id}"
            - BaseName: !FindInMap [S3BucketsNames, !Ref 'AWS::Region', BriefCaseName]
              Id: !Ref Identifier
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
        OwnerName: 6connex

  S3BatchReport:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/others/s3.yml"
      Parameters:
        Identifier:
          !Sub
            - "${BaseName}-${Id}"
            - BaseName: !FindInMap [S3BucketsNames, !Ref 'AWS::Region', BatchReportsName]
              Id: !Ref Identifier
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
        OwnerName: 6connex

  OpsworksStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - Network
    - SecurityGroups
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/opsworks.yml"
      Parameters:
        Identifier: !Ref Identifier
        AgentVersion: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, AgentVersion]
        BerkshelfVersion: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, BerkshelfVersion]
        ManageBerkshelf: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, ManageBerkshelf]
        ConfigurationManagerVersion: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, ConfigurationManagerVersion]
        ConfigurationManagerName: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, ConfigurationManagerName]
        RepositoryType: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, RepositoryType]
        RepositoryUrl: !Ref RepositoryUrl
        DefaultOs: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, DefaultOs]
        DefaultRootDeviceType: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, DefaultRootDeviceType]
        DefaultSubnetId: !GetAtt Network.Outputs.ApplicationSubnet1Id
        HostnameTheme: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, HostnameTheme]
        UseCustomCookbooks: !FindInMap [OpsworksConfiguration, !Ref OpsworksConfig, UseCustomCookbooks]
        DefaultSshKeyName: !Ref DefaultSshKeyName
        OpsworksSshSecretId: !Ref OpsworksSshSecretId
        GitBranch: !Ref GitBranch
        VpcId: !GetAtt Network.Outputs.VpcId
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  BuildNumberParameter:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/others/BuildParameter.yml"
      Parameters:
        Identifier: !Ref Identifier
        BuildNumber: !Ref DefaultBuildNumber
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  LayersStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - OpsworksStack
    - SecurityGroups
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/opsworks-layers.yml"
      Parameters:
        Identifier: !Ref Identifier
        OpsworksStackId: !GetAtt OpsworksStack.Outputs.OpsworksStackId
        S3BuildBucketArn: !Sub arn:aws:s3:::${S3BuildsBucketName}
        S3SharedFilesArn: !GetAtt S3Shared.Outputs.BucketS3
        S3BriefCaseArn: !GetAtt S3BriefCase.Outputs.BucketS3
        S3BatchReportArn: !GetAtt S3BatchReport.Outputs.BucketS3
        S3ConfigFiles: !Sub arn:aws:s3:::${S3BucketName}
        Route53HostedZoneId: !Ref Route53HostedZoneId
        RtsSecurityGroup: !GetAtt SecurityGroups.Outputs.RtsSg
        OpsworksSecurityGroup: !GetAtt SecurityGroups.Outputs.OpsworksSg
        TomcatSecurityGroup: !GetAtt SecurityGroups.Outputs.TomcatSg
        RabbitSecurityGroup: !GetAtt SecurityGroups.Outputs.RabbitSg
        RedisSecurityGroup: !GetAtt SecurityGroups.Outputs.RedisSg
        TomcatVideoSecurityGroup: !GetAtt SecurityGroups.Outputs.TomcatVideoSg
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  AlbStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - LayersStack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/alb.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        VpcId: !GetAtt Network.Outputs.VpcId
        AlbSecurityGroup: !GetAtt SecurityGroups.Outputs.AlbSg
        SubnetIds: !Join [',', !Split [',', !GetAtt Network.Outputs.PublicSubnetIds] ]
        AlbCertificateArn: !Ref AlbCertificateArn
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  MetricsNodeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - LayersStack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/metrics.yml"
      Parameters:
        Identifier: !Ref Identifier
        BuildsBucket: !Ref S3BuildsBucketName
        ImageId: !Ref MetricsImageId
        StackId: !GetAtt OpsworksStack.Outputs.OpsworksStackId
        LayerId: !GetAtt LayersStack.Outputs.MetricsLayerId
        InstanceProfile: !GetAtt LayersStack.Outputs.MetricsProfile
        SecurityGroupsIds: !Join [',', [ !GetAtt SecurityGroups.Outputs.RabbitSg, !GetAtt SecurityGroups.Outputs.OpsworksSg, !GetAtt SecurityGroups.Outputs.TomcatSg]]
        InstanceType: !Ref MetricsNodeType
        KeyName: !Ref DefaultSshKeyName
        SubnetsIds: !Join [',', !Split [',', !GetAtt Network.Outputs.ApplicationSubnetIds] ]
        S3ConfigFiles: !Ref S3BucketName
        RabbitMqUser: !Ref RabbitMqUsername
        RabbitMqPassword: !Ref RabbitMqPassword
        RabbitMqPort: !FindInMap [MetricsNodeConfiguration, MetricsDefaults, Port]
        ConfigurationType: other
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  TargetGroupsStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - AlbStack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/target_groups.yml"
      Parameters:
        Identifier: !Ref Identifier
        VpcId: !GetAtt Network.Outputs.VpcId
        AlbArn: !GetAtt AlbStack.Outputs.AlbArn
        AlbListenerArn: !GetAtt AlbStack.Outputs.AlbListener
        MetricsNodeId: !GetAtt MetricsNodeStack.Outputs.MetricsNodeInstanceId
        RtsDomain: !Ref RtsDomain
        RtsPriority: 1
        MetricDomain: !Ref MetricDomain
        MetricsPriority: 3
        TomcatDomain: !Ref TomcatDomain
        TomcatPriority: 2
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  AutoScalingRts:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - TargetGroupsStack
    - EfsStack
    - RdsStack
    - MemCacheClusterStack
    - RedisReplicationCluster
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/opsworkasg.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        ServerBaseName: rts
        S3ConfigFiles: !Ref S3BucketName
        VpcId: !GetAtt Network.Outputs.VpcId
        InstanceProfile: !GetAtt LayersStack.Outputs.RtsInstanceProfileArn
        ImageId: !Ref RtsImageId
        StackId: !GetAtt OpsworksStack.Outputs.OpsworksStackId
        LayerId: !GetAtt LayersStack.Outputs.RtsLayerId
        SecurityGroupsIds: !Join [',', [ !GetAtt SecurityGroups.Outputs.RtsSg, !GetAtt SecurityGroups.Outputs.OpsworksSg]]
        InstanceType: !Ref RtsInstanceType
        KeyName: !Ref DefaultSshKeyName
        AvalabilityZones:
          !Join
            - ','
            - Fn::GetAZs: !Ref 'AWS::Region'
        SubnetsIds: !Join [',', !Split [',', !GetAtt Network.Outputs.ApplicationSubnetIds] ]
        TargetGroupArn: !GetAtt TargetGroupsStack.Outputs.RtsTg
        DesiredCapacity: !Ref RtsDesiredCapacity
        MaxSize: !Ref RtsMaxSize
        MinSize: !Ref RtsMinSize
        NumberOfRequestsTargetValue: !Ref RtsNumberRequestsPerNode
        ApplicationLoadBalancerFullName: !GetAtt AlbStack.Outputs.AlbLoadBalancerFullName
        TargetGroupFullName: !GetAtt TargetGroupsStack.Outputs.RtsFullName

        S3ConfigFiles: !Ref S3BucketName
        ConfigurationType: rts
        JenkinsJobName: RtsJob

        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  AutoScalingTomcat:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - TargetGroupsStack
    - EfsStack
    - RdsStack
    - MemCacheClusterStack
    - RedisReplicationCluster
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/opsworkasg.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        ServerBaseName: tomcat
        S3ConfigFiles: !Ref S3BucketName
        VpcId: !GetAtt Network.Outputs.VpcId
        InstanceProfile: !GetAtt LayersStack.Outputs.TomcatInstanceProfileArn
        ImageId: !Ref TomcatImageId
        StackId: !GetAtt OpsworksStack.Outputs.OpsworksStackId
        LayerId: !GetAtt LayersStack.Outputs.TomcatLayerId
        SecurityGroupsIds: !Join [',', [ !GetAtt SecurityGroups.Outputs.TomcatSg, !GetAtt SecurityGroups.Outputs.OpsworksSg]]
        InstanceType: !Ref TomcatInstanceType
        KeyName: !Ref DefaultSshKeyName
        AvalabilityZones:
          !Join
            - ','
            - Fn::GetAZs: !Ref 'AWS::Region'
        SubnetsIds: !Join [',', !Split [',', !GetAtt Network.Outputs.ApplicationSubnetIds] ]
        TargetGroupArn: !GetAtt TargetGroupsStack.Outputs.TomcatTg
        DesiredCapacity: !Ref TomcatDesiredCapacity
        MaxSize: !Ref TomcatMaxSize
        MinSize: !Ref TomcatMinSize
        NumberOfRequestsTargetValue: !Ref TomcatNumberRequestsPerNode
        ApplicationLoadBalancerFullName: !GetAtt AlbStack.Outputs.AlbLoadBalancerFullName
        TargetGroupFullName: !GetAtt TargetGroupsStack.Outputs.TomcatFullName

        S3ConfigFiles: !Ref S3BucketName
        ConfigurationType: other
        MountEfs: 'Yes'
        JenkinsJobName: TomcatJob

        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

  AutoScalingTomcatVideo:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - TargetGroupsStack
    - EfsStack
    - RdsStack
    - MemCacheClusterStack
    - RedisReplicationCluster
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::Region}.amazonaws.com/${Environment}/templates/application/opsworkasg.yml"
      Parameters:
        Identifier: !Sub ${Identifier}
        ServerBaseName: tomcatvideo
        S3ConfigFiles: !Ref S3BucketName
        VpcId: !GetAtt Network.Outputs.VpcId
        InstanceProfile: !GetAtt LayersStack.Outputs.TomcatVideoInstanceProfileArn
        ImageId: !Ref TomcatVideoImageId
        StackId: !GetAtt OpsworksStack.Outputs.OpsworksStackId
        LayerId: !GetAtt LayersStack.Outputs.TomcatVideoLayereId
        SecurityGroupsIds: !Join [',', [ !GetAtt SecurityGroups.Outputs.TomcatVideoSg, !GetAtt SecurityGroups.Outputs.OpsworksSg]]
        InstanceType: !Ref TomcatVideoInstanceType
        KeyName: !Ref DefaultSshKeyName
        AvalabilityZones:
          !Join
            - ','
            - Fn::GetAZs: !Ref 'AWS::Region'
        SubnetsIds: !Join [',', !Split [',', !GetAtt Network.Outputs.ApplicationSubnetIds] ]
        TargetGroupArn: !Ref 'AWS::NoValue'

        S3ConfigFiles: !Ref S3BucketName
        MountEfs: 'Yes'
        ConfigurationType: other
        JenkinsJobName: TomcatVideoJob

        DesiredCapacity: !Ref TomcatVideoDesiredCapacity
        ScalingUpAdjustment: !FindInMap [AutoScalingConfig, TomcatVideo, ScaleUpAdjustment]
        MaxSize: !Ref TomcatVideoMaxSize
        MinSize: !Ref TomcatVideoMinSize
        ScalingDownAdjustment: !FindInMap [AutoScalingConfig, TomcatVideo, ScaleDownAdjustment]
        ScaleDownCooldown: !FindInMap [AutoScalingConfig, TomcatVideo, DownCooldown]
        ScaleUpCooldown: !FindInMap [AutoScalingConfig, TomcatVideo, UpCooldown]
        LowPeriod: !FindInMap [AutoScalingConfig, TomcatVideo, LowPerid]
        LowCpuTreshold: !Ref TomcatVideoLowCpuTreshold
        HighPeriod: !FindInMap [AutoScalingConfig, TomcatVideo, HighPeriod]
        HighCpuTreshold: !Ref TomcatVideoHighCpuTreshold
        OwnerName: 6connex
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment

Outputs:

  NetworkPublicIds:
    Description: public subnets ids created
    Value: !GetAtt Network.Outputs.PublicSubnetIds
    Export:
      Name: !Sub ${AWS::StackName}-NetworkPublicIds

  NetworkApplicationIds:
    Description: application subnets ids created
    Value: !GetAtt Network.Outputs.ApplicationSubnetIds
    Export:
      Name: !Sub ${AWS::StackName}-NetworkApplicationIds

  NetworkDataIds:
    Description: data subnets ids created
    Value: !GetAtt Network.Outputs.DataSubnetIds
    Export:
      Name: !Sub ${AWS::StackName}-NetworkDataIds

  NetworkVpcId:
    Description: vpc id created
    Value: !GetAtt Network.Outputs.VpcId
    Export:
      Name: !Sub ${AWS::StackName}-NetworkVpcId

  OpsworksStackId:
    Description: opsworks stack id
    Value: !GetAtt OpsworksStack.Outputs.OpsworksStackId
    Export:
      Name: !Sub ${AWS::StackName}-OpsworksStackId

  SecurityGroupOspworksId:
    Description: opsworks security group id
    Value: !GetAtt SecurityGroups.Outputs.OpsworksSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupOspworksId

  SecurityGroupRtsId:
    Description: RTS security group id
    Value: !GetAtt SecurityGroups.Outputs.RtsSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupRtsId

  SecurityGroupTomcatId:
    Description: Tomcat security group id
    Value: !GetAtt SecurityGroups.Outputs.TomcatSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupTomcatId

  SecurityGroupRdsId:
    Description: RDS security group id
    Value: !GetAtt SecurityGroups.Outputs.RdsSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupRdsId

  SecurityGroupRedisId:
    Description: Redis security group id
    Value: !GetAtt SecurityGroups.Outputs.RedisSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupRedisId

  SecurityGroupMemcacheId:
    Description: Memcache security group id
    Value: !GetAtt SecurityGroups.Outputs.MemcaheSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupMemcacheId

  SecurityGroupEfsId:
    Description: Efs security group id
    Value: !GetAtt SecurityGroups.Outputs.EfsSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupEfsId

  SecurityGroupTomcatVideoId:
    Description: Tomcat Video security group id
    Value: !GetAtt SecurityGroups.Outputs.TomcatVideoSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupTomcatVideoId

  SecurityGroupRabbitMqId:
    Description: Rabbit mq security group id
    Value: !GetAtt SecurityGroups.Outputs.RabbitSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupRabbitMqId

  SecurityGroupAlbId:
    Description: Application Load Balancer security group id
    Value: !GetAtt SecurityGroups.Outputs.AlbSg
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupAlbId

  ApplicationLoadBalancerArn:
    Description: alb arn exposed
    Value: !GetAtt AlbStack.Outputs.AlbArn
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerArn

  ApplicationLoadBalancerListener:
    Description: alb listener arn
    Value: !GetAtt AlbStack.Outputs.AlbListener
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerListener

  ApplicationLoadBalancerFullName:
    Description: alb full name
    Value: !GetAtt AlbStack.Outputs.AlbLoadBalancerFullName
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerFullName

  SharedFilesArn:
    Description: S3 Shared Files ARN
    Value: !GetAtt S3Shared.Outputs.BucketS3
    Export:
      Name: !Sub ${AWS::StackName}-SharedFilesArn

  BriefCaseArn:
    Description: S3 Brief Case ARN
    Value: !GetAtt S3BriefCase.Outputs.BucketS3
    Export:
      Name: !Sub ${AWS::StackName}-BriefCaseArn

  BatchReportArn:
    Description: S3 Batch Report ARN
    Value: !GetAtt S3BatchReport.Outputs.BucketS3
    Export:
      Name: !Sub ${AWS::StackName}-BatchReportArn

  MemCacheEndpoint:
    Description: memcache endpoint address
    Value: !GetAtt MemCacheClusterStack.Outputs.ClusterEndPoint
    Export:
      Name: !Sub ${AWS::StackName}-MemCacheEndpoint

  RedisEndpoint:
    Description: redis endpoint
    Value: !GetAtt RedisReplicationCluster.Outputs.RedisEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-RedisEndpoint

  DbDatabaseEndpoint:
    Description: DB database endpoint address
    Value: !GetAtt RdsStack.Outputs.DbEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-DbDatabaseEndpoint

  DwDatabaseEndpoint:
    Description: DW database endpoint
    Value: !GetAtt RdsStack.Outputs.DwEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-DwDatabaseEndpoint
